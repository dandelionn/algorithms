Ostream iteratori

Primul constructor:

ostream_iterator<T>(stream_iesire);   creeaza un obiect de tip ostream_iterator pentru streamul de
                                      iesire primit ca argument
Exemple:
 ostream_iterator<int>(cout);    -construieste un obiect anonim de tip ostream_iterator, care 
                          va insera valori de tip int in stream-ul cout,fara delimitator intre ele 
 
 fstream fout("text.out");
 ostream_iterator<char> os(fout); -construieste un obiect de tip ostream_iterator,cu numele os,care 
                          va insera in stream-ul fout elemente de tip char,fara delimitator intre ele

Al doilea constructor:

 ostream_iterator<T>(stream_iesire, delimitator); creeaza un obiect de tip ostream_iterator pentru
               stream-ul de iesire primit ca argument,avand ca delimitator intre valorile inserate,
               sirul de caractere delimitator(de tip const char*).
Exemple:
fstream fout("sir.out");
ostream_iterator<int>(fout," ");  construieste un obiect anonim de tip ostream_iterator,care
                                  va insera in streamu-ul fout valori de tip int,delimitate
                                  intre ele de sirul de caractere " ".
ostream_iterator<float> os(cout,"\n"); construieste un obiect de tip ostream_iterator,cu numele os,
                                       care va insera in stream-ul cout,elemente de tip float,
                                       delimitate intre ele de sirul de caractere "\n".

Operatiile *it, it++, ++it nu fac altceva decat sa returneze it.

///Creeaza un ostream iterator pentru stream-ul cout
    ostream_iterator<char> o1(cout);

    ///Operatii specifice iteratorilor
    *o1='A';  ///Insereaza 'A' in stream-ul cout
    o1++;     ///Fara efect
    o1='B';   ///Scrie 'B' pe ecran
    ++o1;     ///Fara efect
    o1='C';   ///Scrie 'C' pe ecran
    o1='\n';  ///Scrie '\n' pe ecran

---------------------------------------------------------------------------------------------
Istream iteratori

Primul constructor:
istream_iterator<T>();  creeaza un end-of-stream iterator

Al doilea constructor:
istream_iterator<T>(stream_intrare);    creeaza un istream iterator pentru stream-ul de intrare
                                        primit ca argument,din care citeste prima valoare.

Operatia *it returneaza valoarea citita anterior
Operatia ++it citeste o valoare si returneaza pozitia acesteia.
Operatia it++ citeste o valoare si returneaza pozitia valorii precedente.

Exemple:

    copy(istream_iterator<string>(cin),   ///Citeste din cin
         istream_iterator<string>(),     ///pana la end-of-stream
         ostream_iterator<string>(cout,"\n"));   ///Scrie in cout


    ----------------------------------  

    ///Construieste un istream iterator
    ///Si un end-of-stream iterator
    istream_iterator<int>is_it(cin),eos_it;

    while(is_it!=eos_it)
    {                       ///*is_it returneaza
        cout<<*is_it<<" ";  ///valoarea citita.
        ++is_it;            ///Citeste valoare si
   }                       ///returneaza un iterator la ea