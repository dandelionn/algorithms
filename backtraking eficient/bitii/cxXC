#include <iostream>
#include <vector>

using namespace std;

bool isSet (size_t pos, long long n )
{
    long long mask;
    mask = 1 << (pos - 1);

    return (n & mask) != 0;
}

void sets ( vector<int> &v )
{
        for (unsigned long long count = 0; count <= (1 << v.size() - 1 ) - 1; count ++)
        {
                for (size_t i = 0; i < v.size(); i++)
                    if (isSet (i, count))
                        cout << v[i] << ',';

                cout << endl;
        }


}

int main()
{

    vector <int> v;
    vector<int>::iterator it;
    it=v.begin();;
    v.push_back(23);
    v.push_back(1);
    v.push_back(2);
    v.push_back(3);



    sets( v );

    v.resize( 1436 )





    return 0;
}


/*
                1 0 0
                1 3 4
                3 4 1


1	5	5	3	4	6
3	2	2	4	1	6

c I : 6 6;  -> 1
c II : 2 5; 2 5;  -> 2
c III : 3 1; 3 4; 4 1;

struct P
{
    int first;
    int second;
}

vector<P> v;
*/
1 2 3 4 5

1 2 3 5 4

1 2 4 3 5

5 4 3 2 1

1000







